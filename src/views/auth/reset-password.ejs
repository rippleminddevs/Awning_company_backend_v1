<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        background-color: #f2f2f2;
      }
      .container {
        width: 100%;
        max-width: 400px;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
      }
      h2 {
        margin-bottom: 20px;
        color: #333;
      }
      .form-group {
        margin-bottom: 15px;
        text-align: left;
        position: relative;
      }
      .form-group label {
        display: block;
        margin-bottom: 5px;
        color: #555;
      }
      .form-group input {
        width: 100%;
        padding: 8px;
        font-size: 1em;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }
      .toggle-password {
        position: absolute;
        top: 65%;
        right: 10px;
        transform: translateY(-50%);
        cursor: pointer;
        font-size: 1.2em;
        color: #555;
      }
      .error-message {
        color: #d9534f;
        font-size: 0.9em;
        margin-top: 5px;
        display: none;
      }
      .success-message {
        color: #5cb85c;
        font-size: 0.9em;
        margin: 15px 0;
        display: none;
      }
      .expired-message {
        color: #d9534f;
        font-size: 1em;
        margin: 15px 0;
        display: none;
      }
      button {
        width: 100%;
        padding: 10px;
        font-size: 1em;
        background-color: #1b5682;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      button:disabled {
        background-color: #ccc;
      }
      #resetForm,
      #expiredMessage {
        display: block;
      }
      #successMessage {
        display: none;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h2>Reset Password</h2>

      <div id="expiredMessage" class="expired-message" style="display: none">
        Your password reset link has expired or is invalid. Please request a new reset link from the
        mobile app.
      </div>

      <div id="successMessage" class="success-message" style="display: none">
        Your password has been reset successfully. You can now log in with your new password.
      </div>

      <form id="resetForm">
        <div class="form-group">
          <label for="new-password">New Password:</label>
          <input type="password" id="new-password" name="password" required minlength="8" />
          <i class="fas fa-eye toggle-password" id="nPassword-toggle"></i>
        </div>
        <div class="form-group">
          <label for="confirm-password">Confirm Password:</label>
          <input
            type="password"
            id="confirm-password"
            name="confirmPassword"
            required
            minlength="8"
          />
          <i class="fas fa-eye toggle-password" id="cPassword-toggle"></i>
          <div class="error-message" id="error-message"></div>
        </div>
        <button type="submit" id="submitBtn">Reset Password</button>
      </form>
    </div>

    <div
      class="footer"
      style="position: fixed; bottom: 10px; width: 100%; text-align: center; color: #777"
    >
      <small style="font-size: 12px"
        >&copy; <%= currentYear %> <%= appName %>. All rights reserved.</small
      >
    </div>

    <script>
      // Toggle password visibility
      function togglePasswordVisibility(inputId, icon) {
        const input = document.getElementById(inputId)
        if (input.type === 'password') {
          input.type = 'text'
          icon.classList.remove('fa-eye')
          icon.classList.add('fa-eye-slash')
        } else {
          input.type = 'password'
          icon.classList.remove('fa-eye-slash')
          icon.classList.add('fa-eye')
        }
      }

      document.getElementById('nPassword-toggle').addEventListener('click', function () {
        togglePasswordVisibility('new-password', this)
      })

      document.getElementById('cPassword-toggle').addEventListener('click', function () {
        togglePasswordVisibility('confirm-password', this)
      })

      // Get token from URL
      const urlParams = new URLSearchParams(window.location.search)
      const token = urlParams.get('token')

      // If no token, show error
      if (!token) {
        document.getElementById('resetForm').style.display = 'none'
        document.getElementById('expiredMessage').style.display = 'block'
      }

      // Handle form submission
      document.getElementById('resetForm').addEventListener('submit', function (e) {
        e.preventDefault()

        const passwordInput = document.getElementById('new-password')
        const confirmPasswordInput = document.getElementById('confirm-password')
        const errorMessage = document.getElementById('error-message')

        // Client-side validation
        if (passwordInput.value.length < 8) {
          errorMessage.textContent = 'Password must be at least 8 characters long'
          errorMessage.style.display = 'block'
          return
        }

        if (passwordInput.value !== confirmPasswordInput.value) {
          errorMessage.textContent = 'Passwords do not match'
          errorMessage.style.display = 'block'
          return
        }

        // Clear error message if validation passes
        errorMessage.style.display = 'none'

        // Disable submit button to prevent multiple submissions
        document.getElementById('submitBtn').disabled = true

        // Make API request
        fetch('/api/auth/reset-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            token: token,
            password: passwordInput.value,
          }),
        })
          .then(response => response.json())
          .then(data => {
            if (data.success === false) {
              // Handle error
              if (data.error && data.error.message === 'Invalid or expired reset token') {
                // Show expired token message
                document.getElementById('resetForm').style.display = 'none'
                document.getElementById('expiredMessage').style.display = 'block'
              } else {
                // Show other error
                errorMessage.textContent = data.error ? data.error.message : 'An error occurred'
                errorMessage.style.display = 'block'
                document.getElementById('submitBtn').disabled = false
              }
            } else {
              // Show success message
              document.getElementById('resetForm').style.display = 'none'
              document.getElementById('successMessage').style.display = 'block'
            }
          })
          .catch(error => {
            console.error('Error:', error)
            errorMessage.textContent = 'An error occurred. Please try again.'
            errorMessage.style.display = 'block'
            document.getElementById('submitBtn').disabled = false
          })
      })
    </script>
  </body>
</html>
